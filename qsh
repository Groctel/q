#!/usr/bin/sh

Help () {
	printf "qsh - A POSIX shell read-later queue manager.\nOptions:\n\n"
	echo "-c, --clear     Clear the q (respects -d and -f) before other operations."
	echo "-d, --directory Set a new q directory other than the default."
	echo "-f, --file      Set a new q file in the current directory other than the default."
	echo "-h, --help      Print the help text and ignore any other operations."
	echo "-p, --print     Print the whole q and extract an specific element."
}

Init () {
	lines=""
	qshdir="$HOME/.q/"
	qshfile="$qshdir""q"
	fclear=0
	fprint=0
}

ParseArgs () {
	while [ $# -gt 0 ]; do
		case "$1" in
			-c|--clear)
				fclear=1
			;;
			-d|--directory)
				qshdir="$(echo "$qshdir" | sed 's/\//\\\//g')"
				qshfile="$(echo "$qshfile" | sed 's/'"$qshdir"'//')"
				qshdir="$(echo "$2/" | sed 's/\/\/$/\//')"
				qshfile="$qshdir""$qshfile"
				shift
			;;
			-f|--file)
				qshfile="$qshdir""$2"
				shift
			;;
			-h|--help)
				Help && exit
			;;
			-p|--print)
				fprint=1
			;;
			*)
				lines=$(echo "$lines
				$1" | sed 's/^\t\+//g')
			;;
		esac
		shift
	done
	lines="$(echo "$lines" | sed '1d')"
}

Pop () {
	[ -s "$qshfile" ] && {
		sed q "$qshfile"
		sed -i '1d' "$qshfile"
	}
	[ ! -s "$qshfile" ] && printf "\033[31;1mYour q is empty!\033[0m\n"
}

Print () {
	index=1
	spaces=$(wc -l "$qshfile" | sed 's/ .*$//g')
	spaces=${#spaces}

	printf "\033[32;1m%-*s Description\033[0m\n" "$((spaces+1))" "#:"

	while read -r line; do
		[ $((index % 10)) -eq 0 ] && echo
		printf "\033[34;1m%-*s \033[0m%s\n" "$((spaces+1))" "$index:" "$line"
		: $((index += 1))
	done < "$qshfile"

	printf "\n\033[32;1m==> \033[0;1mExtract a string (0 for none): \033[0m"
	read -r index

	case $index in
		0|*[!0-9]**)
			echo "There is nothing to do."
		;;
		*)
			sed "$index"'q;d' "$qshfile"
			sed -i "$index"'d' "$qshfile"
		;;
	esac
}

Init
ParseArgs "$@"
mkdir -p "$qshdir"
touch "$qshfile"

[ $fclear -eq 1 ] && sed -i 'd' "$qshfile"
[ -n "$lines" ] && echo "$lines" >> "$qshfile"
[ -z "$lines" ] && [ $fprint -eq 0 ] && Pop
[ $fprint -eq 1 ] && {
	( [ -s "$qshfile" ] && Print ) || Pop
}
return 0
